<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rm_controller = instance_nearest(x,y,obj_KJ_RoomController);

lvl_x = 4;
lvl_y = 4;

rm_x = 20;
rm_y = 15;

spd = 32;

startX = x;
startY = y;
xx = x;
yy = y;

lvl_grid_values = ds_grid_create(4,4);
lvl_grid_types = ds_grid_create(4,4);

current_room = noone;
current_type = noone;


zerocount = 0;
runCreateLevel = true;
while(runCreateLevel) {
    CreateLevel();
    
}

c_rm_x = 0;
c_rm_y = 0;
c_lvl_x = 0;
c_lvl_y = 0;
c_obj = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>c_obj = ds_grid_get(ds_grid_get(lvl_grid_values, c_lvl_x, c_lvl_y), c_rm_x, c_rm_y);

if(c_obj == 0) {
    instance_create(x,y,obj_wall);
}else if(c_obj == 1) {
    instance_create(x,y,obj_floor);
}else if(c_obj == 2) {
    instance_create(x,y,obj_Path);
}


if(c_rm_x == rm_x - 1 &amp;&amp; c_rm_y == rm_y - 1) {
    c_rm_x = 0;
    c_rm_y = 0;
    
    if(c_lvl_x == lvl_x - 1 &amp;&amp; c_lvl_y == lvl_y - 1) {
        rm_controller.canSpawnAnother = true;
        instance_destroy();
    }else {
        if(c_lvl_y == lvl_y - 1) {
            c_lvl_y = 0;  
            c_lvl_x += 1;  
            x = startX + ((c_lvl_x * rm_x) * spd) + (c_rm_x * spd);
            y = ((c_lvl_y * rm_y) * spd) + (spd + c_rm_y) + spd;
        }else {
            c_lvl_y += 1;
            x = startX + ((c_lvl_x * rm_x) * spd) + (c_rm_x * spd);
            y = ((c_lvl_y * rm_y) * spd) + (spd + c_rm_y) + spd;
        }
    }
}else if(c_rm_x &lt; rm_x - 1 &amp;&amp; c_rm_y == rm_y - 1) {
    c_rm_x += 1;
    c_rm_y = 0;
    x = startX + ((c_lvl_x * rm_x) * spd) + (c_rm_x * spd);
    //x = (((c_lvl_x * rm_x) + c_rm_x) * spd) + startX;
    y = (c_lvl_y * rm_y * spd) + startY;
}else {
    c_rm_y += 1;
    y += spd;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
